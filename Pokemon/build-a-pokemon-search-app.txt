** start of undefined **

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Document</title>
</head>
<body>
    <input type="text" id="search-input" required>
    <button id="search-button">Search!</button>

    <div id="pokemon-info">
        <div>
          <img id="sprite" src="" alt="Pokémon Sprite">
        </div>
        <p>Pokémon Name: <span id="pokemon-name"></span></p>
        <p>Pokémon ID: <span id="pokemon-id"></span></p>
        <p>Weight: <span id="weight"></span></p>
        <p>Height: <span id="height"></span></p>
        <p>HP: <span id="hp"></span></p>
        <p>Attack: <span id="attack"></span></p>
        <p>Defense: <span id="defense"></span></p>
        <p>Special Attack: <span id="special-attack"></span></p>
        <p>Special Defense: <span id="special-defense"></span></p>
        <p>Speed: <span id="speed"></span></p>
        <p>Types: <span id="types"></span></p> 
      </div>


    <script src="script.js"></script>
</body>
</html>





** end of undefined **

** start of undefined **

@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Press Start 2P', cursive;
}

body {
  background: linear-gradient(135deg, #ffcc00, #ff3333);
  color: white;
  text-align: center;
  padding: 20px;
}

#search-input {
  width: 80%;
  max-width: 300px;
  padding: 10px;
  font-size: 16px;
  border: 3px solid #ffcc00;
  border-radius: 8px;
  outline: none;
  text-transform: uppercase;
}

#search-button {
  background-color: #ff3333;
  color: white;
  border: none;
  padding: 12px 20px;
  font-size: 18px;
  cursor: pointer;
  margin-top: 10px;
  border-radius: 8px;
  transition: 0.3s;
}

#search-button:hover {
  background-color: #ff6600;
}

#pokemon-info {
  background: rgba(0, 0, 0, 0.7);
  border-radius: 10px;
  padding: 20px;
  margin-top: 20px;
  display: none;
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}

#pokemon-info p {
  font-size: 14px;
  margin: 10px 0;
}

#sprite {
  width: 150px;
  height: 150px;
  background: white;
  border-radius: 50%;
  padding: 10px;
  box-shadow: 0px 0px 10px white;
}

#types span {
  display: inline-block;
  padding: 5px 10px;
  margin: 5px;
  border-radius: 5px;
  background-color: #ffcc00;
  color: black;
  font-weight: bold;
}

/* Responsividade */
@media (max-width: 600px) {
  body {
    font-size: 14px;
  }

  #search-input {
    width: 100%;
  }

  #pokemon-info {
    width: 90%;
  }

  #sprite {
    width: 100px;
    height: 100px;
  }
}


** end of undefined **

** start of undefined **

const searchInput = document.getElementById('search-input');
const searchButton = document.getElementById('search-button');
const pokemonInfo = document.getElementById('pokemon-info');
const pokemonName = document.getElementById('pokemon-name');
const pokemonId = document.getElementById('pokemon-id');
const weight = document.getElementById('weight');
const height = document.getElementById('height');
const hp = document.getElementById('hp');
const attack = document.getElementById('attack');
const defense = document.getElementById('defense');
const specialAttack = document.getElementById('special-attack');
const specialDefense = document.getElementById('special-defense');
const speed = document.getElementById('speed');
const types = document.getElementById('types');
const sprite = document.getElementById('sprite');


searchButton.addEventListener('click', async () => {
    const searchTerm = searchInput.value.toLowerCase();
    let pokemonData;

    try {
      // Attempt to fetch data by name first
      const response = await fetch(`https://pokeapi-proxy.freecodecamp.rocks/api/pokemon/${searchTerm}`);
      pokemonData = await response.json();

    } catch (error) {
      // If name lookup fails, try ID lookup
      try {
        const response = await fetch(`https://pokeapi-proxy.freecodecamp.rocks/api/pokemon/{name-or-id}/${searchTerm}`);
        pokemonData = await response.json(); 
      } catch (error) {
        console.error('Error fetching Pokémon data:', error);
        alert('Pokémon not found.');
        clearPokemonInfo();
        return; 
      }
    }

    // Display Pokémon information
    pokemonName.textContent = pokemonData.name.toUpperCase();
    pokemonId.textContent = `#${pokemonData.id}`;
    weight.textContent = ` ${pokemonData.weight / 10 * 10}`; 
    height.textContent = ` ${pokemonData.height / 10 * 10}`;
    hp.textContent = pokemonData.stats[0].base_stat;
    attack.textContent = pokemonData.stats[1].base_stat;
    defense.textContent = pokemonData.stats[2].base_stat;
    specialAttack.textContent = pokemonData.stats[3].base_stat;
    specialDefense.textContent = pokemonData.stats[4].base_stat;
    speed.textContent = pokemonData.stats[5].base_stat;
    sprite.src = pokemonData.sprites.front_default;

    // Clear and populate types
    types.innerHTML = ''; // Clear existing types
    pokemonData.types.forEach(type => {
      const typeElement = document.createElement('span');
      typeElement.textContent = type.type.name.toUpperCase() + ' ';
      types.appendChild(typeElement);
    });

    pokemonInfo.style.display = 'block'; 
  });

function clearPokemonInfo() {
    pokemonName.textContent = '';
    pokemonId.textContent = '';
    weight.textContent = '';
    height.textContent = '';
    hp.textContent = '';
    attack.textContent = '';
    defense.textContent = '';
    specialAttack.textContent = '';
    specialDefense.textContent = '';
    speed.textContent = '';
    types.innerHTML = '';
    sprite.src = '';
    pokemonInfo.style.display = 'none';
  }


** end of undefined **

